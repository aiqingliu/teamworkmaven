<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.ahut.teamwork.dao.TeamstudentMapper">
	<resultMap id="BaseResultMap"
		type="cn.edu.ahut.teamwork.entity.Teamstudent">
		<result column="teamid" jdbcType="VARCHAR" property="teamid" />
		<result column="studentid" jdbcType="VARCHAR"
			property="studentid" />
		<result column="courseid" jdbcType="VARCHAR"
			property="courseid" />
		<result column="character" jdbcType="VARCHAR"
			property="character" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		teamid, studentid, courseid, character
	</sql>
	<select id="selectByExample"
		parameterType="cn.edu.ahut.teamwork.entity.TeamstudentExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from team_student
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<delete id="deleteByExample"
		parameterType="cn.edu.ahut.teamwork.entity.TeamstudentExample">
		delete from team_student
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert"
		parameterType="cn.edu.ahut.teamwork.entity.Teamstudent">
		insert into team_student (teamid, studentid, courseid,
		character)
		values (#{teamid,jdbcType=VARCHAR}, #{studentid,jdbcType=VARCHAR},
		#{courseid,jdbcType=VARCHAR},
		#{character,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="cn.edu.ahut.teamwork.entity.Teamstudent">
		insert into team_student
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="teamid != null">
				teamid,
			</if>
			<if test="studentid != null">
				studentid,
			</if>
			<if test="courseid != null">
				courseid,
			</if>
			<if test="character != null">
				character,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="teamid != null">
				#{teamid,jdbcType=VARCHAR},
			</if>
			<if test="studentid != null">
				#{studentid,jdbcType=VARCHAR},
			</if>
			<if test="courseid != null">
				#{courseid,jdbcType=VARCHAR},
			</if>
			<if test="character != null">
				#{character,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="cn.edu.ahut.teamwork.entity.TeamstudentExample"
		resultType="java.lang.Long">
		select count(*) from team_student
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update team_student
		<set>
			<if test="record.teamid != null">
				teamid = #{record.teamid,jdbcType=VARCHAR},
			</if>
			<if test="record.studentid != null">
				studentid = #{record.studentid,jdbcType=VARCHAR},
			</if>
			<if test="record.courseid != null">
				courseid = #{record.courseid,jdbcType=VARCHAR},
			</if>
			<if test="record.character != null">
				character = #{record.character,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update team_student
		set teamid = #{record.teamid,jdbcType=VARCHAR},
		studentid = #{record.studentid,jdbcType=VARCHAR},
		courseid = #{record.courseid,jdbcType=VARCHAR},
		character = #{record.character,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	
	<!-- 根据课程courseid查询 -->
	<select id="findByCourseid" parameterType="String" resultType="Teamstudent">
		select * 
		from teamstudent 
		<where>
			<if test="courseid != null">
				courseid = #{courseid}
			</if>
		</where>
		order by teamid asc, studentid asc, `character` desc
	</select>
	
	<!-- 根据teamstudent查找teamstudent -->
	<select id="findTeamstudentByTeamstudent" parameterType="Teamstudent" resultType="Teamstudent">
		SELECT * FROM team_student 
		<where>
			<if test="teamid != null">
				and teamid = #{teamid}
			</if>
			<if test="studentid != null">
				and studentid = #{studentid}
			</if>
			<if test="courseid != null">
				and courseid = #{courseid}
			</if>
			<if test="character != null">
				and `character` = #{character}
			</if>
		</where>
	</select>
	
	<!-- 插入新的小组学生表 -->
	<insert id="insertTeamstudent" parameterType="Teamstudent">
		INSERT INTO team_student 
		(TEAMID,STUDENTID,COURSEID,`CHARACTER`)
		VALUES (
		#{teamid},#{studentid},#{courseid},#{character}
		)
	</insert>
	
	<!-- 修改teamstudent -->
	<update id="updateTeamstudent" parameterType="Teamstudent">
		update team_student 
		<set>
			<if test="teamid != null">
				teamid = #{teamid},
			</if>
			<if test="studentid != null">
				studentid = #{studentid},
			</if>
			<if test="courseid != null">
				courseid = #{courseid},
			</if>
			<if test="character != null">
				`character` = #{character},
			</if>
		</set>
		<where>
			<if test="teamid != null">
				and teamid = #{teamid}
			</if>
			<if test="studentid != null">
				and studentid = #{studentid}
			</if>
			<if test="courseid != null">
				and courseid = #{courseid}
			</if>
		</where>
	</update>
	
	<!-- 根据课程id删除小组学生 -->
	<delete id="deleteTeamstudentByCourseid" parameterType="String">
		delete from team_student 
		where courseid = #{courseid}
	</delete>
	
	<!-- 删除teamstudent -->
	<delete id="deleteTeamstudent" parameterType="Teamstudent">
		delete from team_student 
		<where>
			<if test="teamid != null">
				and teamid = #{teamid}
			</if>
			<if test="studentid != null">
				and studentid = #{studentid}
			</if>
			<if test="courseid != null">
				and courseid = #{courseid}
			</if>
			<if test="character != null">
				and `character` = #{character}
			</if>
		</where>
	</delete>
	
</mapper>