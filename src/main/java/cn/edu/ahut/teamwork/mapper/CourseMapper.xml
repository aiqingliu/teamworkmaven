<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.ahut.teamwork.dao.CourseMapper">

	<resultMap id="BaseResultMap"
		type="cn.edu.ahut.teamwork.entity.Course">
		<result column="id" jdbcType="VARCHAR" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="tid" jdbcType="VARCHAR" property="tid" />
		<result column="time" jdbcType="VARCHAR" property="time" />
		<result column="addr" jdbcType="VARCHAR" property="addr" />
		<result column="group" jdbcType="INTEGER" property="group" />
	</resultMap>

	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>

	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>

	<sql id="Base_Column_List">
		id, name, tid, time, addr, group
	</sql>

	<select id="selectByExample"
		parameterType="cn.edu.ahut.teamwork.entity.CourseExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from course
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>

	<delete id="deleteByExample"
		parameterType="cn.edu.ahut.teamwork.entity.CourseExample">
		delete from course
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>

	<insert id="insert"
		parameterType="cn.edu.ahut.teamwork.entity.Course">
		insert into course (id, name, tid,
		time, addr, group)
		values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
		#{tid,jdbcType=VARCHAR},
		#{time,jdbcType=VARCHAR},
		#{addr,jdbcType=VARCHAR},
		#{group,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective"
		parameterType="cn.edu.ahut.teamwork.entity.Course">
		insert into course
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="tid != null">
				tid,
			</if>
			<if test="time != null">
				time,
			</if>
			<if test="addr != null">
				addr,
			</if>
			<if test="group != null">
				group,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="tid != null">
				#{tid,jdbcType=VARCHAR},
			</if>
			<if test="time != null">
				#{time,jdbcType=VARCHAR},
			</if>
			<if test="addr != null">
				#{addr,jdbcType=VARCHAR},
			</if>
			<if test="group != null">
				#{group,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="cn.edu.ahut.teamwork.entity.CourseExample"
		resultType="java.lang.Long">
		select count(*) from course
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update course
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=VARCHAR},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.tid != null">
				tid = #{record.tid,jdbcType=VARCHAR},
			</if>
			<if test="record.time != null">
				time = #{record.time,jdbcType=VARCHAR},
			</if>
			<if test="record.addr != null">
				addr = #{record.addr,jdbcType=VARCHAR},
			</if>
			<if test="record.group != null">
				group = #{record.group,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update course
		set id = #{record.id,jdbcType=VARCHAR},
		name =
		#{record.name,jdbcType=VARCHAR},
		tid = #{record.tid,jdbcType=VARCHAR},
		time = #{record.time,jdbcType=VARCHAR},
		addr =
		#{record.addr,jdbcType=VARCHAR},
		group =
		#{record.group,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>

	<!-- 根据教师id查询课程 -->
	<select id="findByTeacherId" parameterType="String"
		resultType="Course">
		SELECT *
		FROM COURSE
		<where>
			<if test="_parameter != null">
				<!-- TID = #{_parameter} -->
				TID = #{tid}
			</if>
		</where>
		ORDER BY ID ASC
	</select>
	
	<!-- 根据课程编号查询班级 -->
	<select id="findCourseByCourseid" parameterType="String" resultType="Course">
		SELECT * 
		FROM course 
		<where>
			<if test="courseid != null">
				id = #{courseid}
			</if>
		</where>
	</select>
	
	<!-- 修改课程信息 -->
	<update id="updateCourse" parameterType="Course">
		update course 
		<set>
			<if test="id != null">
				id = #{id},
			</if>
			<if test="code != null">
				code = #{code},
			</if>
			<if test="name != null">
				name = #{name},
			</if>
			<if test="tid != null">
				tid = #{tid},
			</if>
			<if test="time != null">
				time = #{time},
			</if>
			<if test="addr != null">
				addr = #{addr},
			</if>
			<if test="group != null">
				`group` = #{group},
			</if>
		</set>
		where id = #{id}
	</update>

</mapper>