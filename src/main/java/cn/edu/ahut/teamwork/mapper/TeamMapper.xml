<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.ahut.teamwork.dao.TeamMapper">
	<resultMap id="BaseResultMap"
		type="cn.edu.ahut.teamwork.entity.Team">
		<result column="id" jdbcType="VARCHAR" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="courseid" jdbcType="VARCHAR"
			property="courseid" />
		<result column="score" jdbcType="REAL" property="score"/>
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, name, courseid
	</sql>
	<select id="selectByExample"
		parameterType="cn.edu.ahut.teamwork.entity.TeamExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from team
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<delete id="deleteByExample"
		parameterType="cn.edu.ahut.teamwork.entity.TeamExample">
		delete from team
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert"
		parameterType="cn.edu.ahut.teamwork.entity.Team">
		insert into team (id, name, courseid
		)
		values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
		#{courseid,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="cn.edu.ahut.teamwork.entity.Team">
		insert into team
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="courseid != null">
				courseid,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="courseid != null">
				#{courseid,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="cn.edu.ahut.teamwork.entity.TeamExample"
		resultType="java.lang.Long">
		select count(*) from team
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update team
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=VARCHAR},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.courseid != null">
				courseid = #{record.courseid,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update team
		set id = #{record.id,jdbcType=VARCHAR},
		name = #{record.name,jdbcType=VARCHAR},
		courseid = #{record.courseid,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	
	<!-- 根据班级id找到小组 -->
	<select id="findTeamByCourseid" parameterType="String" resultType="Team">
		SELECT * 
		FROM TEAM 
		<where>
			COURSEID = #{courseid}
		</where>
		ORDER BY ID ASC
	</select>
	
	<!-- 根据小组id找到小组 -->
	<select id="findTeamByTeamid" parameterType="String" resultType="Team">
		SELECT * 
		FROM TEAM 
		<where>
			id = #{teamid}
		</where>
		ORDER BY ID ASC
	</select>
	
	<!-- 根据team找到小组 -->
	<select id="findTeam" parameterType="Team" resultType="Team">
		SELECT * 
		FROM TEAM 
		<where>
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="courseid != null">
				and COURSEID = #{courseid}
			</if>
			<if test="code != null">
				and code = #{code}
			</if>
			<if test="name != null">
				and name = #{name}
			</if>
			<if test="score != null">
				and score = #{score}
			</if>
		</where>
		ORDER BY ID ASC
	</select>
	
	<!-- 插入一个新的小组 -->
	<insert id="insertTeam" parameterType="Team">
		INSERT INTO TEAM
		(ID,CODE,NAME,COURSEID,SCORE)
		VALUES(
		#{id},#{code},#{name},#{courseid},#{score}
		)
	</insert>
	
	<!-- 插入一个新的小组 -->
	<insert id="insertTeamSelect" parameterType="Team">
		insert into team
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="code != null">
				code,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="courseid != null">
				courseid,
			</if>
			<if test="score != null">
				score,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id},
			</if>
			<if test="code != null">
				#{code},
			</if>
			<if test="name != null">
				#{name},
			</if>
			<if test="courseid != null">
				#{courseid},
			</if>
			<if test="score != null">
				#{score},
			</if>
		</trim>
	</insert>
	
	<!-- 更新 小组 信息 -->
	<update id="updateTeamById" parameterType="Team">
		update team 
		<set>
			<if test="code != null">
				code = #{code},
			</if>
			<if test="name != null">
				name = #{name},
			</if>
			<if test="courseid != null">
				courseid = #{courseid},
			</if>
			<if test="score != null">
				score = #{score},
			</if>
		</set>
		<where>
			<if test="id != null">
				and id = #{id}
			</if>
		</where>
	</update>
	
	<!-- 更新 小组 信息 -->
	<update id="updateTeam" parameterType="Team">
		update team 
		<set>
			<if test="id != null">
				id = #{id},
			</if>
			<if test="code != null">
				code = #{code},
			</if>
			<if test="name != null">
				name = #{name},
			</if>
			<if test="courseid != null">
				courseid = #{courseid},
			</if>
			<if test="score != null">
				score = #{score},
			</if>
		</set>
		<where>
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="code != null">
				and code = #{code}
			</if>
			<if test="name != null">
				and name = #{name}
			</if>
			<if test="courseid != null">
				and courseid = #{courseid}
			</if>
			<if test="score != null">
				and score = #{score}
			</if>
		</where>
	</update>
	
	<!-- 根据课程id删除对应课程的分组 -->
	<delete id="deleteTeamByCourseid" parameterType="String">
		delete from team
		where courseid = #{courseid}
	</delete>
	
</mapper>